openapi: "3.0.0"
info:
  description: "The API Specefication for Texas A&M Libraries FacultyLeave Application"
  version: "1.0.0"
  title: "FacultyLeave API Specefication"
  contact:
    email: "tamulib-admin@library.tamu.edu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "github.com"
basePath: "/TAMULib/FacultyLeave"
schemes:
- "https"
- "http"
paths:
  /leave:
    post:
      tags:
      - "leave"
      summary: "Add a new request for leave."
      description: "Add a new request for leave."
      operationId: "addLeave"
      requestBody:
        description: "Leave object describing the requested leave."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Leave"
      responses:
        "201":
          description: "Leave Request Created"
        "401":
          description: "You are not authorized to create a leave request"
        "403":
          description: "You are forbidden to create a leave request"
        "422":
          description: "The requested leave is an unprocessable entity"
        "500":
          description: "Internal Server Error"
    get:
      tags:
      - "leave"
      summary: "Get a list of requests for leave."
      description: "Get a list of requests for leave."
      operationId: "getLeave"
      produces:
      - "application/json"
      parameters:
      - name: "ids"
        in: "query"
        description: "Comma seperated string of ids to return"
        required: false
        type: "string"
      - name: "departmentName"
        in: "query"
        description: "The name of the department to retrieve requests for"
        required: false
        type: "string"
      - name: "timeframe"
        in: "query"
        description: "The window of time for requests"
        required: false
        type: "string"
      responses:
        "200":
          description: "Request successful"
          schema:
            $ref: "#/definitions/Leave"
        "400":
          description: "The request was invalid"
        "500":
          description: "Internal Server Error"
  /leave/{id}:
    put:
      tags:
      - "leave"
      summary: "Update an existing leave request"
      description: "Update an existing leave request"
      operationId: "updateLeave"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of leave request to be updated"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Leave object used to update existing leave request"
        required: true
        schema:
          $ref: "#/definitions/Leave"
      responses:
        "204":
          description: "Leave Request Updated"
        "401":
          description: "You are not authorized to create a leave request"
        "403":
          description: "You are forbidden to create a leave request"
        "404":
          description: "Leave request not found"
        "422":
          description: "The requested leave is an unprocessable entity"
        "500":
          description: "Internal Server Error"
    get:
      tags:
        - "leave"
      summary: "Get a request for leave by id"
      description: "Get a list of requests for leave."
      operationId: "getLeaveById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of leave request to be updated"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "Request successful"
          schema:
            $ref: "#/definitions/Leave"
        "400":
          description: "The request was invalid"
        "404":
          description: "The leave request was not found"
        "500":
          description: "Internal Server Error"
  /leave/{id}/approve:
    put:
      tags:
        - "leave"
      summary: "Modify a leave request with approval."
      description: "Modify a leave request with approval."
      operationId: "updateLeaveApproval"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "204": 
          description: "The leave request has been approved"
        "401": 
          description: "You are not authorized to approve a leave request"
        "403":
          description: "You are forbidden to approve a leave request"
        "404":
          description: "Leave request not found"
        "500":
          description: "Internal Server Error"
  /leave/{id}/reject:
    put:
      tags:
        - "leave"
      summary: "Modify a leave request with rejection."
      description: "Modify a leave request with approval."
      operationId: "updateLeaveRejection"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "204": 
          description: "The leave request has been rejected"
        "401": 
          description: "You are not authorized to reject a leave request"
        "403":
          description: "You are forbidden to reject a leave request"
        "404":
          description: "Leave request not found"
        "500":
          description: "Internal Server Error"
  /leave/{id}/cancel:
    put:
      tags:
        - "leave"
      summary: "Cancels a leave request."
      description: "Cancels a leave request."
      operationId: "cancelLeaveRequest"
      consumes:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "204": 
          description: "The leave request has been canceled"
        "401": 
          description: "You are not authorized to cancel a leave request"
        "403":
          description: "You are forbidden to cancel a leave request"
        "404":
          description: "Leave request not found"
        "500":
          description: "Internal Server Error"
  /leave/{id}/correction:
    post:
      tags:
      - "leave"
      summary: "Add a new corection for an existing request for leave."
      description: "Add a new corection for an existing request for leave."
      operationId: "correctLeave"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
        - name: "body"
          in: "body"
          description: "PastLeaveChangeRequest object describing the requested changes."
          required: true
          schema:
            $ref: "#/definitions/PastLeaveChangeRequest"
      responses:
        "201":
          description: "Leave Request Created"
        "401":
          description: "You are not authorized to create a leave request"
        "403":
          description: "You are forbidden to create a leave request"
        "422":
          description: "The requested leave is an unprocessable entity"
        "500":
          description: "Internal Server Error"
  /employees/{uin}:
    get:
      tags:
        - "employees"
      summary: "Retrieves an employee by UIN"
      description: "Retrieves an employee by UIN"
      operationId: "getEmployee"
      produces:
      - "application/json"
      parameters:
        - name: "uin"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Employee Found"
          schema:
            $ref: "#/definitions/Person"
        "401":
          description: "You are not authorized to retrieve an employee."
        "403":
          description: "You are forbidden to retrieve an employee."
        "404":
          description: "Employee Not Found"
        "500":
          description: "Internal Server Error"
  /employees/{uin}/leave:
    get:
      tags:
        - "employees"
      summary: "Retrieves an employee's requested leave by UIN"
      description: "Retrieves an employee's requested leave by UIN"
      operationId: "getEmployeeLeave"
      produces:
      - "application/json"
      parameters:
        - name: "uin"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Employee Leave Found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Leave"
        "401":
          description: "You are not authorized to retrieve an employee's leave."
        "403":
          description: "You are forbidden to retrieve an employee's leave."
        "404":
          description: "Employee Not Found"
        "500":
          description: "Internal Server Error"
  /employees/{uin}/history:
    get:
      tags:
        - "employees"
      summary: "Retrieves an employee's leave history by UIN"
      description: "Retrieves an employee's leave history by UIN"
      operationId: "getEmployeeHistory"
      produces:
      - "application/json"
      parameters:
        - name: "uin"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
        - name: "timeframe"
          in: "query"
          description: "The window of time for requests"
          required: false
          type: "string"
      responses:
        "200":
          description: "Employee Leave History Found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Leave"
        "401":
          description: "You are not authorized to retrieve an employee's leave history."
        "403":
          description: "You are forbidden to retrieve an employee's leave history."
        "404":
          description: "Employee Not Found"
        "500":
          description: "Internal Server Error"
  /employees/{uin}/balance:
    get:
      tags:
        - "employees"
      summary: "Retrieves an employee's leave balance by UIN"
      description: "Retrieves an employee's leave balance by UIN"
      operationId: "getEmployeeLeaveBalance"
      produces:
      - "application/json"
      parameters:
        - name: "uin"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Employee Leave History Found"
          schema:
            $ref: "#/definitions/LeaveBalance"
        "401":
          description: "You are not authorized to retrieve an employee's leave balance."
        "403":
          description: "You are forbidden to retrieve an employee's leave balance."
        "404":
          description: "Employee Not Found"
        "500":
          description: "Internal Server Error"
  /employees/{uin}/settings:
    get:
      tags:
        - "employees"
      summary: "Retrieves an employee's settings"
      description: "Retrieves an employee's settings"
      operationId: "getEmployeeSettings"
      produces:
      - "application/json"
      parameters:
        - name: "uin"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Employee Settings Found"
          schema:
            $ref: "#/definitions/PersonProfile"
        "401":
          description: "You are not authorized to retrieve an employee's settings."
        "403":
          description: "You are forbidden to retrieve an employee's settings."
        "404":
          description: "Employee Not Found"
        "500":
          description: "Internal Server Error"
    put:
      tags:
        - "employees"
      summary: "Updates an employee's settings"
      description: "Updates an employee's settings"
      operationId: "putEmployeeSettings"
      consumes:
      - "application/json"
      parameters:
        - name: "uin"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
        - name: "settings"
          in: "body"
          required: true
          schema:
            $ref: "#/components/schemas/PersonProfile"
      responses:
        "204":
          description: "Employee Settings Updated"
        "400":
          description: "The settings object is invalid."
        "401":
          description: "You are not authorized to update an employee's settings."
        "403":
          description: "You are forbidden to update an employee's settings."
        "404":
          description: "Employee Not Found"
        "422":
          description: "The settings object is an unprocessable entity"
        "500":
          description: "Internal Server Error"
securityDefinitions:
  petstore_auth:
    type: "basic"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
components:
  schemas:
    Leave:
      type: "object"
      required:
      - "employeeUIN"
      - "supervisorUIN"
      - "description"
      - "title"
      - "isApproved"
      - "days"
      properties:
        employeeUIN:
          type: "string"
          format: "uuid"
        supervisorUIN:
          type: "integer"
          format: "int64"
        description:
          type: "string"
          example: "Summer Vacation"
        title:
          type: "string"
          example: "June Leave"
        isApproved:
          type: "boolean"
        days:
          type: "array"
          items:
            $ref: "#/components/schemas/LeaveDay"
    LeaveDay:
      type: "object"
      required:
        - "leaveDayDuration"
        - "date"
      properties:
        leaveDayDuration:
          type: string
          enum: [HALF, FULL]
        date:
          type: string
          format: date
          example: "04-23-21"
    PastLeaveChangeRequest:
      type: "object"
      required:
        - "description"
      properties:
        referencedLeave:
          type: "string"
          format: "uuid"
        description:
          type: "string"
    Person:
      type: "object"
      properties:
        NetId:
          type: "string"
        UIN:
          type: "integer"
          format: "int32"
        Role:
          type: "string"
          enum: [EMPLOYEE, WORK_ADMIN, HR_ADMIN]
        Department:
          type: "string"
        Supervisor:
          $ref: "#/components/schemas/Person"
        Reports:
          type: "array"
          items:
            $ref: "#/components/schemas/Person"
    PersonProfile:
      type: "object"
      properties:
        UIN:
          type: "integer"
          format: "int32"
        futureLeaveColor:
          type: "string"
        pastLeaveColor:
          type: "string"
        preferredColors:
          type: "array"
          items:
            type: "string"
        preferDayDisplay:
          type: "boolean"
        ChosenReports:
          type: "array"
          items:
            $ref: "#/components/schemas/Person"
    LeaveBalance:
      type: "object"
      properties:
        total:
          type: "number"
          format: "float"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"